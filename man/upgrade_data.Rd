% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upgrade_data.R
\name{upgrade_data}
\alias{upgrade_data}
\alias{upgrade_data.git_repository}
\title{Upgrade files to the new version}
\usage{
upgrade_data(file, root = ".", verbose, ...)

\method{upgrade_data}{git_repository}(file, root = ".", verbose = TRUE,
  ..., stage = FALSE, force = FALSE)
}
\arguments{
\item{file}{the name of the file without file extension. Can include a
relative path. \code{file} is a path relative to the \code{root}.}

\item{root}{The root of a project. Can be a file path or a \code{git-repository}.
Defaults to the current working directory (".").}

\item{verbose}{display a message with the update status. Defaults to \code{TRUE}.}

\item{...}{parameters used in some methods}

\item{stage}{Logical value indicating whether to stage the changes after
writing the data. Defaults to FALSE}

\item{force}{Add ignored files. Default is FALSE.}
}
\value{
the file names
}
\description{
Updates the data written by older versions to the current data format
standard.
}
\examples{
# create a directory
root <- tempfile("git2rdata-")
dir.create(root)

# write a dataframe to the directory
write_vc(iris[1:6, ], file = "iris", root = root, sorting = "Sepal.Length")
# upgrade the file
upgrade_data(file = "iris", root = root)
}
\seealso{
Other internal: \code{\link{is_git2rdata}},
  \code{\link{is_git2rmeta}}, \code{\link{meta}}
}
\concept{internal}

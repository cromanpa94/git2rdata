% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_vc.R
\name{write_vc}
\alias{write_vc}
\alias{write_vc.git_repository}
\title{Write a \code{data.frame} to a git repository}
\usage{
write_vc(x, file, root = ".", sorting, override = FALSE,
  optimize = TRUE, ...)

\method{write_vc}{git_repository}(x, file, root, sorting,
  override = FALSE, optimize = TRUE, ..., stage = FALSE,
  force = FALSE)
}
\arguments{
\item{x}{the `data.frame}

\item{file}{the name of the file without file extension. Can include a
relative path. It is relative to the \code{root}.}

\item{root}{The root of a project. Can be a file path or a \code{git-repository}.
Defaults to the current working directory (".").}

\item{sorting}{a vector of column names defining which columns to use for
sorting \code{x} and in what order to use them. Only required when writing
new metadata.}

\item{override}{Ignore existing meta data. This is required when new
variables are added or variables are deleted. Setting this to TRUE can
potentially lead to large diffs. Defaults to FALSE.}

\item{optimize}{recode the data to get smaller text files. Defaults to TRUE}

\item{...}{additional parameters used in some methods}

\item{stage}{stage the changes after writing the data. Defaults to FALSE}

\item{force}{Add ignored files. Default is FALSE.}
}
\value{
a named vector with the file paths relative to \code{root}. The names
contain the hashes of the files.
}
\description{
This will create two files. The \code{".tsv"} file contains the raw data.
The \code{".yml"} contains the meta data on the columns in YAML format.
}
\examples{
# on file system
root <- tempfile("git2rdata-")
dir.create(root)
write_vc(iris[1:6, ], file = "iris", root = root, sorting = "Sepal.Length")
list.files(root, recursive = TRUE)
read_vc("iris", root)
write_vc(iris[1:5, ], "iris", root)
list.files(root, recursive = TRUE)
write_vc(
  iris[1:6, -2], "iris", root, sorting = "Sepal.Length", override = TRUE
)
list.files(root, recursive = TRUE)
write_vc(iris[1:6, ], "iris", root, sorting = "Sepal.Width", override = TRUE)
list.files(root, recursive = TRUE)
write_vc(
  iris[1:6, ], "iris2", root, sorting = "Sepal.Width", optimize = FALSE
)
list.files(root, recursive = TRUE)

# on git repo
repo_path <- tempfile("git2rdata-repo-")
dir.create(repo_path)
repo <- git2r::init(repo_path)
git2r::config(repo, user.name = "Alice", user.email = "alice@example.org")
write_vc(iris[1:6, ], file = "iris", root = repo, sorting = "Sepal.Length")
status(repo)
read_vc("iris", repo)
write_vc(iris[1:5, ], "iris", repo, stage = TRUE)
status(repo)
write_vc(
  iris[1:6, -2], "iris", repo, sorting = "Sepal.Length", override = TRUE
)
status(repo)
write_vc(
  iris[1:6, ], "iris", repo, sorting = "Sepal.Width", override = TRUE,
  stage = TRUE
)
status(repo)
write_vc(
  iris[1:6, ], "iris2", repo, sorting = "Sepal.Width", optimize = FALSE
)
status(repo)
}
\seealso{
Other storage: \code{\link{prune_meta}},
  \code{\link{read_vc}}, \code{\link{rm_data}}
}
\concept{storage}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_data.R
\name{list_data}
\alias{list_data}
\title{list available data objects in the repository}
\usage{
list_data(root = ".", path = ".", recursive = TRUE)
}
\arguments{
\item{root}{the \code{root} of the repository. Either a path or a \code{git-repository}}

\item{path}{relative \code{path} from the \code{root}. Defaults to the \code{root}}

\item{recursive}{logical.  Should the listing recurse into directories?}
}
\value{
a character vector is dataframe names, including their relative path
}
\description{
list available data objects in the repository
}
\examples{
# on file system
root <- tempfile("git2rdata-")
dir.create(root)
write_vc(iris[1:6, ], "iris", root, sorting = "Sepal.Length")
list_data(root)
list.files(root, recursive = TRUE)
rm_data(root, path = ".")
list.files(root, recursive = TRUE)
list_data(root)
prune_meta(root, path = ".")
list.files(root, recursive = TRUE)
list_data(root)

# on git repo
repo_path <- tempfile("git2rdata-repo-")
dir.create(repo_path)
repo <- git2r::init(repo_path)
git2r::config(repo, user.name = "Alice", user.email = "alice@example.org")
write_vc(iris[1:6, ], "iris", repo, sorting = "Sepal.Length", stage = TRUE)
status(repo)
list_data(repo)
auto_commit(package = "my_package", repo)
status(repo)
rm_data(repo, path = ".")
list_data(repo)
status(repo)
prune_meta(repo, path = ".")
list_data(repo)
status(repo)
}
\seealso{
Other storage: \code{\link{prune_meta}},
  \code{\link{read_vc}}, \code{\link{relabel}},
  \code{\link{rm_data}}, \code{\link{write_vc}}
}
\concept{storage}
